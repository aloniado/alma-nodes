[{"C:\\Alon\\Projects\\alma-nodes\\src\\index.js":"1","C:\\Alon\\Projects\\alma-nodes\\src\\App.js":"2","C:\\Alon\\Projects\\alma-nodes\\src\\reportWebVitals.js":"3","C:\\Alon\\Projects\\alma-nodes\\src\\pages\\Map\\index.js":"4","C:\\Alon\\Projects\\alma-nodes\\src\\pages\\Gallery\\index.js":"5","C:\\Alon\\Projects\\alma-nodes\\src\\components\\Node\\index.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":866,"mtime":1609520629989,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":20292,"mtime":1609516915273,"results":"11","hashOfConfig":"8"},{"size":233,"mtime":1609504151328,"results":"12","hashOfConfig":"8"},{"size":4424,"mtime":1609520675225,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"16geva9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Alon\\Projects\\alma-nodes\\src\\index.js",[],["29","30"],"C:\\Alon\\Projects\\alma-nodes\\src\\App.js",["31","32"],"import './App.css';\nimport Map from \"./pages/Map\";\nimport Gallery from \"./pages/Gallery\";\nimport React from \"react\";\nimport {BrowserRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\n\n// import { useHistory } from 'react-router-dom';\n\n\nfunction App() {\n    // return (\n    //     <Stack.Navigator initialRouteName=\"home\">\n    //         <Stack.Screen name=\"settings\" component={Map} />\n    //         <Stack.Screen\n    //             name=\"profile\"\n    //             component={Gallery}\n    //             options={{ title: 'John Doe' }}\n    //         />\n    //     </Stack.Navigator>\n    // );\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Route path=\"/\" exact component={Map}/>\n                <Route path=\"/gallery\" component={Gallery}/>\n            </div>\n        </Router>\n\n    );\n}\n\nexport default App;\n","C:\\Alon\\Projects\\alma-nodes\\src\\reportWebVitals.js",[],"C:\\Alon\\Projects\\alma-nodes\\src\\pages\\Map\\index.js",[],"C:\\Alon\\Projects\\alma-nodes\\src\\pages\\Gallery\\index.js",[],"C:\\Alon\\Projects\\alma-nodes\\src\\components\\Node\\index.js",["33","34"],"import React, {Component, useState} from \"react\";\r\nimport NodeIcon from '../../assets/images/node.svg'\r\nimport './index.css';\r\n// // import { browserHistory } from 'react-router';\r\n//\r\n// import { Link } from \"react-router-dom\";\r\n\r\nclass Node extends Component {\r\n    state = {}\r\n    childrenImages = {}\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.nodeClickHandler = this.nodeClickHandler.bind(this);\r\n        this.updateExtendedChild = this.updateExtendedChild.bind(this)\r\n\r\n        this.state = {\r\n            type: props.data.type,\r\n            children: props.data.children ? props.data.children : null,\r\n            level: props.level,\r\n            // extended: props.extended ? props.extended : false,\r\n            extendedChild: null,\r\n            // extendedSibling: null,\r\n            id:  props.headNode ? 'l0-c0' : props.id,\r\n        }\r\n\r\n        if (this.props.headNode) {\r\n            this.state['headExpand'] = false;\r\n        }\r\n\r\n        if (this.state.children) {\r\n            for (let i=0; i<this.state.children.length; i++) {\r\n                this.state.children[i].id = `l${this.state.level}-c${i}`;\r\n                if (this.state.children[i].type) {\r\n                    this.childrenImages[this.state.children[i].id] = this.state.children[i].url\r\n                }\r\n            }\r\n            // console.log('>>', this.state.children)\r\n        }\r\n\r\n        // if (this.state.level === 0)\r\n\r\n    }\r\n\r\n    nodeClickHandler() {\r\n        console.log('click. node props:', this.props)\r\n\r\n        //head node handler:\r\n        if (this.props.headNode) {\r\n            this.setState({\r\n                headExpand: !this.state.headExpand\r\n            })\r\n            return;\r\n        }\r\n\r\n        //image handler:\r\n        if (this.state.type) {\r\n            console.log('image click!')\r\n            console.log(window);\r\n            // window.location.href = '/gallery';\r\n\r\n\r\n            return;\r\n        }\r\n\r\n        //childless node handler:\r\n        if (!this.state.children) {\r\n            console.log('no children')\r\n            return;\r\n        }\r\n\r\n        //directory node with children handler\r\n        let status = (this.props.extendedSibling === this.state.id)\r\n        this.props.updateExtendedChild(this.state.id, status);\r\n    }\r\n\r\n    updateExtendedChild(id, status) {\r\n        console.log('child event', id, status);\r\n\r\n        let value = id;\r\n        if (id === this.state.extendedChild) {\r\n            value = null\r\n        }\r\n\r\n        this.setState({\r\n            extendedChild: value\r\n        }, () => {\r\n            console.log('parent id:', this.state.id, 'extendedChild:', this.state.extendedChild)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // console.log('props:',this.props)\r\n        // console.log('state:',this.state)\r\n\r\n        return (\r\n            <div>\r\n                <div className={this.state.type ? 'image-node' : 'folder-node'} onClick={this.nodeClickHandler}>\r\n                    {/*<img src={NodeIcon} className=\"node-icon\"/>*/}\r\n                    <div className={this.state.children ? 'bold' : ''}>\r\n                        O\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.children && ((this.props.headNode && this.state.headExpand) || (this.props.extendedSibling === this.state.id)) && <div className=\"level\">\r\n                        <div>level: {this.state.level}</div>\r\n                        {\r\n                            this.state.children.map(el => <Node data={el}\r\n                                                                level={this.state.level + 1}\r\n                                                                key={el.id}\r\n                                                                id={el.id}\r\n                                                                extendedSibling={this.state.extendedChild}\r\n                                                                updateExtendedChild={this.updateExtendedChild}\r\n                                                                headNode={false}\r\n                                                                siblingImages={this.childrenImages}\r\n                                                                // history={}\r\n                            />)\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Node;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":41,"nodeType":"41","messageId":"42","endLine":5,"endColumn":47},{"ruleId":"39","severity":1,"message":"43","line":5,"column":49,"nodeType":"41","messageId":"42","endLine":5,"endColumn":59},{"ruleId":"39","severity":1,"message":"44","line":1,"column":27,"nodeType":"41","messageId":"42","endLine":1,"endColumn":35},{"ruleId":"39","severity":1,"message":"45","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useState' is defined but never used.","'NodeIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]